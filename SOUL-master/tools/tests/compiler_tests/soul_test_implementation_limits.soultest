/*
    _____ _____ _____ __
   |   __|     |  |  |  |      The SOUL language
   |__   |  |  |  |  |  |__    Copyright (c) 2019 - ROLI Ltd.
   |_____|_____|_____|_____|

   The code in this file is provided under the terms of the ISC license:

   Permission to use, copy, modify, and/or distribute this software for any purpose
   with or without fee is hereby granted, provided that the above copyright notice and
   this permission notice appear in all copies.

   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD
   TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN
   NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
   DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
   IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
   CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/

## compile

processor test1
{
    input stream int audioIn;
    output stream float audioOut;

    void run()
    {
        loop
        {
            audioOut << float (audioIn);
            advance();
        }
    }
}

namespace test2
{
    using MyType = int;

    processor test
    {
        input stream MyType audioIn;
        output stream float audioOut;

        void run()
        {
            loop
            {
                audioOut << float (audioIn);
                advance();
            }
        }
    }
}

namespace test3
{
    processor test()
    {
        input stream float audioIn;
        output stream MyType audioOut;

        void run()
        {
            loop
            {
                audioOut << int (audioIn);
                advance();
            }
        }
    }

    using MyType = int;
}

namespace test4
{
    struct MyType
    {
        int i;
    }

    processor EventWithStructType
    {
        input event MyType noteOn;
        output stream float32 outp;

        void run()
        {
            loop
            {
                outp << 0.0;
                advance();
            }
        }
    }
}

## function

int functionWithMaxNumParams (int a1,int a2,int a3,int a4,int a5,int a6,int a7,int a8,int a9,int a10,
                              int a11,int a12,int a13,int a14,int a15,int a16,int a17,int a18,int a19,int a20,
                              int a21,int a22,int a23,int a24,int a25,int a26,int a27,int a28,int a29,int a30,
                              int a31,int a32,int a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,
                              int a41,int a42,int a43,int a44,int a45,int a46,int a47,int a48,int a49,int a50,
                              int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,
                              int a61,int a62,int a63,int a64,int a65,int a66,int a67,int a68,int a69,int a70,
                              int a71,int a72,int a73,int a74,int a75,int a76,int a77,int a78,int a79,int a80,
                              int a81,int a82,int a83,int a84,int a85,int a86,int a87,int a88,int a89,int a90,
                              int a91,int a92,int a93,int a94,int a95,int a96,int a97,int a98,int a99,int a100,
                              int a101,int a102,int a103,int a104,int a105,int a106,int a107,int a108,int a109,int a110,
                              int a111,int a112,int a113,int a114,int a115,int a116,int a117,int a118,int a119,int a120,
                              int a121,int a122,int a123,int a124,int a125,int a126,int a127,int a128)
{
    return a128;
}

bool test()
{
    return functionWithMaxNumParams (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1) == 1;
}

## error 14:88: error: Too many function parameters

int function (int a1,int a2,int a3,int a4,int a5,int a6,int a7,int a8,int a9,int a10,
              int a11,int a12,int a13,int a14,int a15,int a16,int a17,int a18,int a19,int a20,
              int a21,int a22,int a23,int a24,int a25,int a26,int a27,int a28,int a29,int a30,
              int a31,int a32,int a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,
              int a41,int a42,int a43,int a44,int a45,int a46,int a47,int a48,int a49,int a50,
              int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,
              int a61,int a62,int a63,int a64,int a65,int a66,int a67,int a68,int a69,int a70,
              int a71,int a72,int a73,int a74,int a75,int a76,int a77,int a78,int a79,int a80,
              int a81,int a82,int a83,int a84,int a85,int a86,int a87,int a88,int a89,int a90,
              int a91,int a92,int a93,int a94,int a95,int a96,int a97,int a98,int a99,int a100,
              int a101,int a102,int a103,int a104,int a105,int a106,int a107,int a108,int a109,int a110,
              int a111,int a112,int a113,int a114,int a115,int a116,int a117,int a118,int a119,int a120,
              int a121,int a122,int a123,int a124,int a125,int a126,int a127,int a128, int a129)
{
    return 0;
}

## error 2:5: error: Illegal array size

int[0] x;

## error 2:5: error: Illegal array size

int[-1] x;

## error 2:18: error: Illegal array size

void foo() { int[0] x; }

## error 2:18: error: Too many elements

void foo() { int[2147483648L] x; }

## error 2:26: error: Too many elements

void foo() { let x = int[2147483648L]; }

## error 2:26: error: Too many elements

void foo() { var x = int[2147483648L]; }

## error 2:5: error: Too many elements

int[2147483648L] x;

## error 2:21: error: Illegal array size

const int[] x = int[0] (1);

## error 2:21: error: Too many elements

const int[] x = int[2147483648L] (1);

## error 2:21: error: Too many elements

const int[] x = int[2147483648L]();

## error 2:13: error: Too many elements

let x = int[2147483648L] (1);

## error error: Stack size limit exceeded - program requires 381.5 MB, maximum allowed is 20 MB

int foo()
{
    int[100000000] x;
    x[1] = 1;
    return x[1];
}

## error error: Stack size limit exceeded - program requires 8 GB, maximum allowed is 20 MB

int foo()
{
    int[2147483647L] x;
    x[1] = 1;
    return x[1];
}

## error 5:9: error: Identifier too long

bool myIdentifierTooLong()
{
    let a123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345 = 1;
    let a1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456 = 1;

    return true;
}
