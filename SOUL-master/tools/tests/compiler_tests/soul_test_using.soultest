/*
    _____ _____ _____ __
   |   __|     |  |  |  |      The SOUL language
   |__   |  |  |  |  |  |__    Copyright (c) 2019 - ROLI Ltd.
   |_____|_____|_____|_____|

   The code in this file is provided under the terms of the ISC license:

   Permission to use, copy, modify, and/or distribute this software for any purpose
   with or without fee is hereby granted, provided that the above copyright notice and
   this permission notice appear in all copies.

   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD
   TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN
   NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
   DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
   IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
   CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/

## compile

namespace test
{
    using C = A;
    using D = B;

    struct A { int x; }
    struct B { float x; }

    using E = void;

    void foo (F& a) { a = 1; }
    using F = int;
}

processor DummyProcessor { output stream int x; void run() { loop advance(); }}

## error 6:7: error: The name 'B' is already in use

struct A { int x; }
struct B { float x; }

using C = A;
using B = C;

## error 3:6: error: The name 'B' is already in use

struct A { int x; }
void B() {}

using C = A;
using B = C;

## error 2:7: error: The types 'A' and 'C' refer to each other recursively

using A = B;
using B = C;
using C = A;

## error 2:8: error: The types 'A' and 'D' refer to each other recursively

struct A { B x; }
struct B { C x; }

using C = D;
using D = A;

## error 2:14: error: Using declarations cannot be references

using A = int&;

## error 2:20: error: Function parameters cannot be void

void foo (const A& a) {}
using A = void;

## error 2:29: error: The '=' operator must be given an assignable variable

void foo (const F& a) { a = 1; }
using F = int;

## error 5:22: error: Cannot create a vector with elements that are not primitive types

namespace N
{
    using A = float<2>;
    struct State { A<2> x; }
}
