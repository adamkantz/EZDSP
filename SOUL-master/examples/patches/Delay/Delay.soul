/*
    == SOUL example code ==
    == Author: Jules ==
*/

/// Title: A very simple delay example
///
/// This example is a very simple implementation of a delay, where the length
/// and feedback level can be changed dynamically with event parameters.

processor Delay  [[ main ]]
{
    input  stream float audioIn;
    output stream float audioOut;

    input event
    {
        float delayLength    [[ min: 0,  max: 1000, init:  50,  name: "Length",   unit: "ms", step: 1 ]];
        float delayFeedback  [[ min: 0,  max: 100,  init:  25,  name: "Feedback", unit: "%",  step: 1 ]];
    }

    event delayLength (float delayMs)
    {
        let delaySamples = max (1, int (processor.frequency * (delayMs / 1000.0f)));

        readPos = wrap<maxDelayLength> (writePos - delaySamples);
    }

    event delayFeedback (float f)
    {
        feedback = f * 0.01f;
    }

    let maxDelayLength = 100000;

    float feedback;
    float[maxDelayLength] buffer;
    wrap<maxDelayLength> readPos, writePos;

    void run()
    {
        loop
        {
            buffer[writePos] = audioIn + feedback * buffer[readPos];
            audioOut << buffer[readPos];

            ++readPos;
            ++writePos;

            advance();
        }
    }
}
